name: strato deploy tes
'on':
  push:
    paths:
    - .github/workflows/stratoget.yaml
jobs:
  create-web-app:      
    runs-on: ubuntu-latest
    env:
      GITHUB_REPO_NAME: 'reactstrato'
      AZURE_SUBSCRIPTION: ''
      AZURE_RESOURCE_GROUP: ''
      AZURE_DEPLOY_ENVIRONMENT: 'dev'
      AZURE_WEB_APP_TYPE: 'java'
      AZURE_CLIENT_ID: 'b81c1a0e-887e-42ba-a1db-e3a5bbb6ce93'
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: 'c9536685-1262-420b-a94b-4f5420284680'
      AZURE_WEB_APP_NAME_PREFIX: 'alm-app'
      AZURE_WEB_APP_SKU: 'S1'
      AZURE_WEB_APP_WORKERS: '4'
      AZURE_ACR_NAME_PREFIX: 'almacr'
      AZURE_ACR_SKU: 'Standard'
      AZURE_ACR_ADMIN_ENABLED: true
      STRATOSPHERE_API_URL: https://api.live.external.byp.ai
      PROJECT_NAME: alm
      GEOGRAPHY: us
      OWNER_GROUP_NAME : 'grp-sec-saas-sub-lplat-test-reader'
    steps:
    - name: Set env
      run: |
        echo "AZURE_WEB_APP_SVC_PLAN=${AZURE_WEB_APP_NAME_PREFIX}-${AZURE_WEB_APP_TYPE}-${AZURE_DEPLOY_ENVIRONMENT}" >> $GITHUB_ENV
        echo "AZURE_WEB_APP_NAME1=${AZURE_WEB_APP_NAME_PREFIX}-${AZURE_WEB_APP_TYPE}-${GITHUB_REPO_NAME}-${AZURE_DEPLOY_ENVIRONMENT}" >> $GITHUB_ENV
        echo "AZURE_WEB_APP_NAME=${GITHUB_REPO_NAME}-${AZURE_DEPLOY_ENVIRONMENT}" >> $GITHUB_ENV
        echo "AZURE_ACR_NAME1=${AZURE_ACR_NAME_PREFIX}${AZURE_DEPLOY_ENVIRONMENT}" >> $GITHUB_ENV
        echo "AZURE_WEB_APP_IMAGE_NAME=${GITHUB_REPO_NAME}-${AZURE_DEPLOY_ENVIRONMENT}" >> $GITHUB_ENV

    - name: Checkout Code
      uses: actions/checkout@v2
      
    - name: Get URL
      run: |
        curl -H "accept: application/json" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.ST_TOKEN }}" \
          --request GET \
          ${{ env.STRATOSPHERE_API_URL }}/geographies/${{ env.GEOGRAPHY }}/projects/${{ env.PROJECT_NAME }}/resources/container-web/${{ env.AZURE_WEB_APP_NAME }} > temp.json
        echo "CONTAINER_WEB_ENDPOINT_URL=$(jq -r '.links.endpoint.url' temp.json)" >> $GITHUB_ENV
    - name: out URL
      run: |
        echo $CONTAINER_WEB_ENDPOINT_URL
    - name: Update Stratospher Container Web Endpoints File
      run: |
        if [ ! -f .github/contaierweb/contaierweb.json ];then
          mkdir -p .github/contaierweb
          touch .github/contaierweb/contaierweb.json
          echo "{}" > .github/contaierweb/contaierweb.json
        fi
        jq --arg container_web_name $AZURE_WEB_APP_NAME --arg project_name $PROJECT_NAME --arg webapp_url $CONTAINER_WEB_ENDPOINT_URL '. + {($container_web_name): {"project_name": $project_name, "webapp_url": $webapp_url}}' < .github/contaierweb/contaierweb.json > tmp_contaierweb.json && mv tmp_contaierweb.json .github/contaierweb/contaierweb.json
        git config --global user.email "siva.medapati@blueyonder.com"
        git config --global user.name "Siva Medapati"
        git config pull.rebase false
        git pull origin ${BRANCH}
        git add -f .github/contaierweb/contaierweb.json
        if [ -z "$(git status --porcelain)" ]; then 
          echo "Nothing to commit"
        else 
          git commit -m "update webapp endpoint"
          git push origin ${BRANCH}
        fi
        
